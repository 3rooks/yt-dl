<form id="dl-channel-form" class="w-full md:w-8/12 lg:w-6/12 mx-auto">
    <h2 class="text-center text-lg font-bold mb-4">DOWNLOAD CHANNEL:</h2>
    <div
        class="
            flex
            items-center
            border border-solid border-gray-500
            rounded-lg
            overflow-hidden
        "
    >
        <input
            type="text"
            class="w-full border-none focus:outline-none px-4 py-3"
            placeholder="Channel URL"
            name="channelUrl"
            required
        />
        <button
            type="submit"
            class="
                bg-blue-500
                hover:bg-blue-600
                text-white
                px-4
                py-3
                disabled:opacity-50 disabled:cursor-not-allowed
            "
        >
            Send
        </button>
    </div>
</form>
<div id="dl-btn-container" class="hidden flex justify-center items-center mt-8">
    <button
        id="download-link"
        class="
            bg-blue-500
            hover:bg-blue-700
            text-white
            font-bold
            py-2
            px-4
            rounded
        "
    ></button>
</div>
<script>
    const form = document.getElementById('dl-channel-form');
    const sendButton = form.querySelector('button[type="submit"]');
    const downloadLink = document.getElementById('download-link');
    const buttonContainer = document.getElementById('dl-btn-container');

    form.addEventListener('submit', async (ev) => {
        try {
            ev.preventDefault();

            const formData = new FormData(form);
            const data = Object.fromEntries(formData.entries());

            sendButton.disabled = true;
            sendButton.classList.remove('bg-blue-500', 'hover:bg-blue-600');
            sendButton.classList.add('bg-gray-500', 'cursor-not-allowed');

            const response = await fetch('/download/channel', {
                method: 'POST',
                body: JSON.stringify({
                    clientId: socket.id,
                    channelUrl: data.channelUrl
                }),
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            const title = decodeURIComponent(
                response.headers
                    .get('Content-Disposition')
                    .split('filename=')[1]
                    .replace(/"/g, '')
                    .trim()
            );

            const link = document.createElement('a');
            link.href = URL.createObjectURL(await response.blob());
            link.download = title;
            link.textContent = 'Download';
            downloadLink.appendChild(link);
            buttonContainer.classList.remove('hidden');
            link.addEventListener('click', () => {
                setTimeout(() => {
                    sendButton.classList.remove(
                        'bg-gray-500',
                        'cursor-not-allowed'
                    );
                    sendButton.classList.add(
                        'bg-blue-500',
                        'hover:bg-blue-600'
                    );
                    sendButton.disabled = false;
                    downloadLink.removeChild(link);
                    URL.revokeObjectURL(link.href);
                    buttonContainer.classList.add('hidden');
                    form.reset();
                }, 5000);
            });
        } catch (error) {
            console.log(error);
            const errorContainer = document.createElement('div');
            errorContainer.classList.add('flex', 'justify-center', 'mt-8');
            document.body.appendChild(errorContainer);
            const errorText = document.createElement('p');
            errorText.textContent = 'ERROR: Something wrong - Check console';
            errorText.classList.add(
                'text-red-500',
                'font-bold',
                'bg-gray-100',
                'px-4',
                'py-2',
                'rounded'
            );
            errorContainer.appendChild(errorText);
        }
    });
</script>
